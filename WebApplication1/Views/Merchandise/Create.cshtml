@using Microsoft.AspNetCore.Identity;
@using Animerch.Data;
@using Animerch.Models;

@model Animerch.Models.Transaction

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Add Merchandise";
}

@if (SignInManager.IsSignedIn(User))
{
    <h2>Add Merchandise</h2>
    
    <p>@((ViewData["selectedMerch"] as Merchandise).Name) - @((ViewData["selectedMerch"] as Merchandise).Type) - @((ViewData["selectedMerch"] as Merchandise).Manufacturer)</p>
    <hr/>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Price" class="control-label"></label>
                    <input asp-for="Price" class="form-control" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Amount" class="control-label">Amount</label>
                    <input asp-for="Amount" class="form-control" />
                    <span asp-validation-for="Amount" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <input asp-for="MerchandiseId" class="form-control" value="@((ViewData["SelectedMerch"] as Merchandise).ID)"/>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}
else
{    
    <br/>
    <p class="alert alert-danger" role="alert">You must be logged in to see this page</p>
}

