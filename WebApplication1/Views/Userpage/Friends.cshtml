@using Animerch.Data;
@using Animerch.Models;
@using Microsoft.AspNetCore.Identity;

@model FriendEntry

@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Friends";
    List<FriendEntry> friendEntries = ViewData["UserFriendListEntries"] as List<FriendEntry>;
    User user = await UserManager.GetUserAsync(User);

    var friends = friendEntries.Where(FE => FE.RequestAccepted == true && FE.UserID == user.Id).ToList();
    var pendingFriends = friendEntries.Where(FE => FE.UserID == user.Id && FE.RequestAccepted == false).ToList();
    var incomingFriends = friendEntries.Where(FE => FE.FriendID == user.Id && FE.RequestAccepted == false).ToList();
    var route = ViewContext.ExecutingFilePath;
}

<h2>Friends</h2>

    <table class="table">
        <thead>
            Your friends (@friends.Count)
        </thead>
@if (friends != null)
{
        <tbody>
            @foreach (var friend in friends)
            {
                <tr>
                    <td>@friend.Friend.UserName</td>
                    <td>
                        <form asp-action="UserDeleteFriend">
                            <input class="btn-link" type="submit" value="Remove Friend" />
                            <input asp-for="UserID" type="hidden" value="@user.Id" />
                            <input asp-for="FriendID" type="hidden" value="@friend.FriendID" />
                        </form>
                    </td>

                </tr>
            }
        </tbody>
}
    </table>

    <table class="table">
        <thead>
            Pending Friend Requests (@pendingFriends.Count)
        </thead>
@if (pendingFriends != null)
{
        <tbody>
            @foreach (var friend in pendingFriends)
            {
                <tr>
                    <td>@friend.Friend.UserName</td>
                    <td>
                        <form asp-action="UserDeleteFriend">
                            <input class="btn-link" type="submit" value="Cancel Friend Request" />
                            <input asp-for="UserID" type="hidden" value="@user.Id" />
                            <input asp-for="FriendID" type="hidden" value="@friend.FriendID" />
                        </form>
                    </td>
                </tr>
            }
        </tbody>
}
    </table>

    <table class="table">
        <thead>
            Incoming Friend Requests (@incomingFriends.Count)
        </thead>
@if (incomingFriends != null)
{
        <tbody>
            @foreach (var friend in incomingFriends)
            {
                <tr>
                    <td>@friend.User.UserName</td>
                    <td>
                        <form asp-action="UserAddFriend">
                            <input class="btn-link" type="submit" value="Accept Friend Request" />
                            <input asp-for="UserID" type="hidden" value="@user.Id" />
                            <input asp-for="FriendID" type="hidden" value="@friend.UserID" />
                            <input asp-for="RequestAccepted" type="hidden" value="true"/>
                        </form>
                    </td>
                    <td>
                        <form asp-action="UserDeleteFriend">
                            <input class="btn-link" type="submit" value="Decline Friend Request" />
                            <input asp-for="UserID" type="hidden" value="@friend.UserID" />
                            <input asp-for="FriendID" type="hidden" value="@user.Id" />
                        </form>
                    </td>
                </tr>
            }
        </tbody>
}
    </table>



